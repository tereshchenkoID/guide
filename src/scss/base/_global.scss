@use 'scss/config' as *;

*,
::after,
::before {
  box-sizing: border-box;
  word-break: break-all;
}

html {
  scroll-behavior: smooth;
}

body {
  @include smooth-font;

  font-family: var(--font-family);
  font-size: var(--font-size);
  font-weight: var(--typography-thin);
  -webkit-font-smoothing: antialiased;
  line-height: var(--line-height);
  overflow-y: auto;
  color: var(--color-text);
}

button {
  @include reset-button;
}

button,
a {
  @include transition(all);

  font-weight: var(--typography-thin);
}

a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;

  &:active,
  &:hover {
    color: var(--color-accent);
  }

  &:focus {
    outline-color: var(--color-accent);
  }
}

a,
p {
  @include make-spacer(p, 0);
  @include make-spacer(my, var(--gap));
}

ul,
ol {
  @include reset-list;
}

ul {
  list-style: inside;
}

hr {
  @include make-spacer(my, 0);
  @include size(100%, rem(1px));

  display: block;
  border: 0;
  background-color: var(--color-text);
}

picture {
  display: block;
  max-width: 100%;
  height: auto;
}

code {
  @include make-spacer(my, var(--gap));
  @include make-spacer(p, var(--gap));

  display: block;
  font-family: monospace;
  font-size: rem(14px);
  font-weight: var(--typography-bold);
  line-height: 1.1;
  letter-spacing: 0.5px;
  white-space: break-spaces;
  word-spacing: normal;
  word-break: break-all;
  color: var(--color-white);
  background-color: var(--color-black);
  tab-size: 4;
}

table {
  width: 100%;
  border-collapse: collapse;
}

thead {
  font-size: rem(12px);
  background-color: var(--color-border);
}

th, 
td {
  @include make-spacer(py, 4px);
  @include make-spacer(px, 8px);
  
  min-width: rem(150px);
  text-align: left;
}

tr {
  font-size: rem(14px);

  &:nth-child(even) {
    background-color: var(--color-border);
  }
}

.main {
  position: relative;
}

.section {
  @include flex($justify-content: center, $direction: column);

  min-height: 100dvh;

  &:nth-child(even) {
    color: var(--color-white);
    background-color: var(--color-black);

    code {
      color: var(--color-text);
      background-color: var(--color-white);
    }
  }
}

.container-fluid {
  @include make-spacer(py, 60px);
  @include flex($align-items: center);

  flex-grow: 1;
  width: 100%;
}

.container {
  @include make-spacer(mx, auto);
  @include make-spacer(px, var(--gap));
  
  width: 100%;

  @include media-breakpoint-up(sm) {
    max-width: rem(540px);
  }

  @include media-breakpoint-up(md) {
    max-width: rem(720px);
  }

  @include media-breakpoint-up(lg) {
    max-width: rem(960px);
  }

  @include media-breakpoint-up(xl) {
    max-width: rem(1140px);
  }

  @include media-breakpoint-up(xxl) {
    max-width: rem(1320px);
  }
}

.description {
  max-width: rem(600px);
}

.grid {
  display: grid;
  gap: var(--gap);

  &__description,
  &__input {
    @include make-spacer(my, var(--gap));
  }

  &--2 {
    @include media-breakpoint-up(lg) {
      grid-template-columns: repeat(2, 1fr);
    }
  }
}

.accent {
  color: var(--color-accent)
}

.label {
  display: block;
  font-size: rem(14px)
}

.input {
  @include transition;
  @include make-spacer(px, 12px);
  @include size(100%, rem(40px));

  border: rem(1px) solid var(--color-border);

  &:focus {
    border-color: var(--color-accent);
    outline: none;
  }
}